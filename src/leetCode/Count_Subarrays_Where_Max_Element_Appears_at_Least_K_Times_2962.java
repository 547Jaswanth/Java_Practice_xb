package leetCode;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Scanner;

class Solution5 {
    public long countSubarrays(int[] nums, int k) {

        int max=Arrays.stream(nums).max().getAsInt();
        long resCount=0;
        for(int start=0;start<nums.length;start++)
        {


            for(int end=start;end<nums.length;end++)
            {
                long count=0;

                int res[]=printSubArrays(nums,start,end);

                for(int i=0;i<res.length;i++)
                {
                    if(res[i]==max)
                    {
                        count++;
                    }
                }
                if(count>=k)
                {
                    resCount++;
                }
            }

        }



        return resCount;
    }
    private static int[] printSubArrays(int arr[],int start, int end)
    {
        int[] subArray= Arrays.copyOfRange(arr,start,end+1);

        return subArray;
    }
}
public class Count_Subarrays_Where_Max_Element_Appears_at_Least_K_Times_2962 {
    public static void main(String[] args) {

        Scanner sc= new Scanner(System.in);

        System.out.print("n: ");
        int n=sc.nextInt();

        int arr[]={1062,825,1243,132,1956,108,745,1115,1956,1956,347,404,654,412,1702,1416,1956,973,495,1956,362,1511,1618,1956,1406,324,1956,252,1748,1956,1956,736,704,1956,1956,1100,487,1956,1724,1956,1956,185,1956,1149,1956,1956,497,1343,1956,759,1469,1956,917,729,1876,1140,640,1956,1956,1306,189,1667,1199,264,1251,121,1956,1956,1681,1591,981,1956,1956,419,735,954,1200,919,1956,1956,569,1028,1956,1018,353,609,520,200,633,442,1956,1956,509,6,1030,50,1498,1329,659,1415,992,1575,94,1835,518,389,1818,33,1956,1956,1956,1292,152,86,1115,1956,608,1835,1956,1804,1143,513,1956,1956,1927,1956,467,670,62,1100,1047,1956,500,90,193,1393,636,712,1310,782,257,1537,1956,1199,1511,1226,82,1956,1521,1956,1092,88,235,851,1248,666,1427,1956,910,83,1838,1956,194,1956,411,1956,1956,1648,1956,1907,1702,1956,937,1956,992,1956,429,130,691,1956,13,1707,730,1956,976,662,1187,51,1540,1956,675,1321,1648,1956,293,1295,198,1956,1317,924,675,1956,140,920,675,243,649,869,1032,1672,87,1440,585,1956,1346,1587,1295,1186,1320,21,1243,932,1956,1956,1956,1288,740,1956,1956,806,371,279,1956,21,1076,1956,1956,1956,765,1877,1104,1956,1956,1069,652,575,1956,956,1956,585,1501,1467,1412,1956,1956,1055,1383,656,339,1956,1956,1405,1956,356,1399,1682,390,1791,1956,1405,1825,1280,1668,1471,1956,1016,1956,1022,728,1956,432,481,519,1315,1956,586,177,558,817,333,1956,1622,606,1956,1541,1956,277,1956,655,541,591,504,1324,1575,491,749,1765,789,855,1633,1531,1956,922,1025,1956,1351,1609,758,1945,619,1956,1287,122,4,1956,1356,1611,1956,1956,486,1370,1956,1609,1956,1428,973,1233,1956,443,119,1869,1956,936,875,124,465,304,423,1319,1069,1303,1956,105,316,788,1709,1400,504,504,132,1956,54,1956,1956,1688,1956,1178,774,1433,1956,933,1414,321,1656,1008,664,1956,1765,590,1571,1892,793,1956,1956,297,1096,1355,1166,1956,722,1956,679,1956,1956,1164,1293,1956,711,473,1407,557,344,1956,469,1370,472,1084,1956,1804,1445,536,1956,1300,1956,313,1573,535,1893,1956,767,1919,1956,533,1956,1501,507,1454,104,1956,1956,1389,1669,1534,719,1956,56,852,1956,1801,899,1198,525,1956,780,1863,1956,1705,1956,1433,1956,1956,1956,875,1025,1586,1026,1584,1086,685,1956,1854,732,1935,314,1956,925,924,1956,240,1083,1476,1720,1956,1488,1861,528,1028,1884,1918,246,1956,751,1956,301,1956,1956,1956,779,954,1944,619,956,1774,1617,1148,1668,1379,1586,1956,1956,275,1531,1956,1621,1229,1019,977,41,593,171,1278,1253,1880,56,1956,1956,1956,17,1956,1027,1631,1154,1717,1939,1666,1560,1194,631,1363,1452,944,695,149,309,1956,1956,681,1000,1845,1212,708,1956,1956,1956,1095,1956,1956,871,659,1216,724,1859,1956,154,1956,1396,1788,90,856,1956,1517,1956,1956,1956,1956,319,505,647,1587,1602,1458,1074,1156,1956,1656,1956,1689,1763,342,1956,1261,792,385,266,129,1956,1047,1956,639,420,1232,97,1956,1956,1063,1612,1956,407,294,48,1956,1956,3,1660,1956,1956,1956,1956,1531,286,167,1621,137,1571,467,1956,1956,771,1462,1956,1337,1956,1956,1956,1956,1580,1210,1956,1956,333,894,1075,1956,1956,1460,1956,1101,9,1956,1773,474,633,1480,366,1956,1340,19,154,1956,711,1432,1110,761,997,1956,1754,1956,1759,933,1445,1321,1956,734,1956,807,824,374,861,600,1246,55,1356,1083,1048,1017,1319,458,1956,1956,1956,1956,1021,730,1956,1725,848,384,606,1664,885,1956,421,868,364,1145,1786,1956,1956,1956,1956,958,567,137,1497,633,1956,858,1416,1354,624,759,1956,1956,650,125,1956,1292,1956,1956,1486,1211,1199,694,1956,1698,1583,1956,1956,1956,951,1789,656,1956,108,484,1598,1538,1511,844,1956,412,434,128,309,632,1655};

        Solution5 s=new Solution5();
       long res = s.countSubarrays(arr,n);

       System.out.println(res);

    }
}
